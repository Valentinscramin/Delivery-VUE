{"ast":null,"code":"import MessageVue from '../Message/Message.vue';\nexport default {\n  name: \"dashboard\",\n  data() {\n    return {\n      msg: null,\n      burgers: null,\n      burguer_id: null,\n      status: []\n    };\n  },\n  methods: {\n    async getOrders() {\n      const req = await fetch(\"http://localhost:3000/burgers\");\n      const data = await req.json();\n      this.burgers = Array.from(data);\n      this.getStatus();\n    },\n    async getStatus() {\n      const req = await fetch(\"http://localhost:3000/status\");\n      const data = await req.json();\n      this.status = Array.from(data);\n    },\n    async deleteOrder(id) {\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"DELETE\"\n      });\n      const res = await req.json();\n      this.msg = `O pedido ${id} foi deletado com sucesso`;\n      setTimeout(() => this.msg = \"\", 10000);\n      this.getOrders();\n    },\n    async updateOrder(event, id) {\n      const option = event.target.value;\n      const dataJson = JSON.stringify({\n        status: option\n      });\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n    }\n  },\n  mounted() {\n    this.getOrders();\n  },\n  components: {\n    MessageVue\n  }\n};","map":{"version":3,"names":["MessageVue","name","data","msg","burgers","burguer_id","status","methods","getOrders","req","fetch","json","Array","from","getStatus","deleteOrder","id","method","res","setTimeout","updateOrder","event","option","target","value","dataJson","JSON","stringify","headers","body","mounted","components"],"sources":["/home/valentin/Desktop/apps/vue-first-project/src/components/Dashboard/Dashboard.vue"],"sourcesContent":["<template>\n    <div id=\"dashboard\">\n        <div>\n            <div>\n                <MessageVue :msg=\"msg\" v-show=\"msg\" />\n            </div>\n            <div class=\"burguer-table-heading\">\n                <div class=\"order-id\">#</div>\n                <div>Cliente:</div>\n                <div>Pão:</div>\n                <div>Carne:</div>\n                <div>Opcionais:</div>\n                <div>Ações:</div>\n            </div>\n            <div class=\"burguer-table-rows\">\n                <div v-for=\"eachOne in burgers\" :key=\"eachOne.id\" class=\"burguer-table-row\">\n                    <div class=\"order-number\">{{ eachOne . id }}</div>\n                    <div>{{ eachOne . name }}</div>\n                    <div>{{ eachOne . bread }}</div>\n                    <div>{{ eachOne . meat }}</div>\n                    <div>\n                        <ul>\n                            <li v-for=\"optional in eachOne.optionals\" :key=\"optional\">{{ optional }}</li>\n                        </ul>\n                    </div>\n                    <div>\n                        <select name=\"status\" class=\"status\" @change=\"updateOrder($event, eachOne.id)\">\n                            <option value=\"\">Status</option>\n                            <option v-for=\"eachStatus in status\" :key=\"eachStatus.id\" :value=\"eachStatus.name\"\n                                :selected=\"eachOne.status == eachStatus.name\">{{ eachStatus . name }}</option>\n                        </select>\n                        <button class=\"btn-delete\" @click=\"deleteOrder(eachOne.id)\">Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import MessageVue from '../Message/Message.vue';\n    export default {\n        name: \"dashboard\",\n        data() {\n            return {\n                msg: null,\n                burgers: null,\n                burguer_id: null,\n                status: []\n            };\n        },\n        methods: {\n            async getOrders() {\n                const req = await fetch(\"http://localhost:3000/burgers\");\n                const data = await req.json();\n\n                this.burgers = Array.from(data);\n                this.getStatus();\n            },\n            async getStatus() {\n                const req = await fetch(\"http://localhost:3000/status\");\n                const data = await req.json();\n                this.status = Array.from(data)\n            },\n            async deleteOrder(id) {\n                const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                    method: \"DELETE\"\n                })\n\n                const res = await req.json();\n\n                this.msg = `O pedido ${id} foi deletado com sucesso`\n\n                setTimeout(() => this.msg = \"\", 10000);\n\n                this.getOrders();\n            },\n            async updateOrder(event, id) {\n\n                const option = event.target.value;\n\n                const dataJson = JSON.stringify({\n                    status: option\n                });\n\n                const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: dataJson\n                });\n\n                const res = await req.json()\n            }\n        },\n        mounted() {\n            this.getOrders();\n        },\n        components: {\n            MessageVue\n        },\n    };\n</script>\n<style scoped>\n    @import \"style.scss\";\n</style>\n"],"mappings":"AAuCI,OAAOA,UAAS,MAAO,wBAAwB;AAC/C,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAE,IAAI;MACTC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MACd,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MACxD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACP,OAAM,GAAIQ,KAAK,CAACC,IAAI,CAACX,IAAI,CAAC;MAC/B,IAAI,CAACY,SAAS,CAAC,CAAC;IACpB,CAAC;IACD,MAAMA,SAASA,CAAA,EAAG;MACd,MAAML,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MACvD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACL,MAAK,GAAIM,KAAK,CAACC,IAAI,CAACX,IAAI;IACjC,CAAC;IACD,MAAMa,WAAWA,CAACC,EAAE,EAAE;MAClB,MAAMP,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCM,EAAG,EAAC,EAAE;QAC3DC,MAAM,EAAE;MACZ,CAAC;MAED,MAAMC,GAAE,GAAI,MAAMT,GAAG,CAACE,IAAI,CAAC,CAAC;MAE5B,IAAI,CAACR,GAAE,GAAK,YAAWa,EAAE,2BAA0B;MAEnDG,UAAU,CAAC,MAAM,IAAI,CAAChB,GAAE,GAAI,EAAE,EAAE,KAAK,CAAC;MAEtC,IAAI,CAACK,SAAS,CAAC,CAAC;IACpB,CAAC;IACD,MAAMY,WAAWA,CAACC,KAAK,EAAEL,EAAE,EAAE;MAEzB,MAAMM,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK;MAEjC,MAAMC,QAAO,GAAIC,IAAI,CAACC,SAAS,CAAC;QAC5BrB,MAAM,EAAEgB;MACZ,CAAC,CAAC;MAEF,MAAMb,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCM,EAAG,EAAC,EAAE;QAC3DC,MAAM,EAAE,OAAO;QACfW,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEJ;MACV,CAAC,CAAC;MAEF,MAAMP,GAAE,GAAI,MAAMT,GAAG,CAACE,IAAI,CAAC;IAC/B;EACJ,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACtB,SAAS,CAAC,CAAC;EACpB,CAAC;EACDuB,UAAU,EAAE;IACR/B;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}