{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4dfee239\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"dashboard\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"burguer-table-heading\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"order-id\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Cliente:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Pão:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Carne:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Opcionais:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Ações:\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"burguer-table-rows\"\n};\nconst _hoisted_4 = {\n  class: \"order-number\"\n};\nconst _hoisted_5 = [\"onChange\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Status\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\", \"selected\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MessageVue = _resolveComponent(\"MessageVue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createVNode(_component_MessageVue, {\n    msg: $data.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, $data.msg]])]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.burgers, eachOne => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: eachOne.id,\n      class: \"burguer-table-row\"\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(eachOne.id), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(eachOne.name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(eachOne.bread), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(eachOne.meat), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(eachOne.optionals, optional => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: optional\n      }, _toDisplayString(optional), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"select\", {\n      name: \"status\",\n      class: \"status\",\n      onChange: $event => $options.updateOrder($event, eachOne.id)\n    }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.status, eachStatus => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: eachStatus.id,\n        value: eachStatus.name,\n        selected: eachOne.status == eachStatus.name\n      }, _toDisplayString(eachStatus.name), 9 /* TEXT, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"btn-delete\",\n      onClick: $event => $options.deleteOrder(eachOne.id)\n    }, \"Cancelar\", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","value","_createElementBlock","_hoisted_1","_createVNode","_component_MessageVue","msg","$data","_hoisted_2","_hoisted_3","_Fragment","_renderList","burgers","eachOne","key","_hoisted_4","_toDisplayString","name","bread","meat","optionals","optional","onChange","$event","$options","updateOrder","_hoisted_6","status","eachStatus","selected","_hoisted_7","onClick","deleteOrder","_hoisted_8"],"sources":["/home/valentin/Desktop/apps/vue-first-project/src/components/Dashboard/Dashboard.vue"],"sourcesContent":["<template>\n    <div id=\"dashboard\">\n        <div>\n            <div>\n                <MessageVue :msg=\"msg\" v-show=\"msg\" />\n            </div>\n            <div class=\"burguer-table-heading\">\n                <div class=\"order-id\">#</div>\n                <div>Cliente:</div>\n                <div>Pão:</div>\n                <div>Carne:</div>\n                <div>Opcionais:</div>\n                <div>Ações:</div>\n            </div>\n            <div class=\"burguer-table-rows\">\n                <div v-for=\"eachOne in burgers\" :key=\"eachOne.id\" class=\"burguer-table-row\">\n                    <div class=\"order-number\">{{ eachOne . id }}</div>\n                    <div>{{ eachOne . name }}</div>\n                    <div>{{ eachOne . bread }}</div>\n                    <div>{{ eachOne . meat }}</div>\n                    <div>\n                        <ul>\n                            <li v-for=\"optional in eachOne.optionals\" :key=\"optional\">{{ optional }}</li>\n                        </ul>\n                    </div>\n                    <div>\n                        <select name=\"status\" class=\"status\" @change=\"updateOrder($event, eachOne.id)\">\n                            <option value=\"\">Status</option>\n                            <option v-for=\"eachStatus in status\" :key=\"eachStatus.id\" :value=\"eachStatus.name\"\n                                :selected=\"eachOne.status == eachStatus.name\">{{ eachStatus . name }}</option>\n                        </select>\n                        <button class=\"btn-delete\" @click=\"deleteOrder(eachOne.id)\">Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import MessageVue from '../Message/Message.vue';\n    export default {\n        name: \"dashboard\",\n        data() {\n            return {\n                msg: null,\n                burgers: null,\n                burguer_id: null,\n                status: []\n            };\n        },\n        methods: {\n            async getOrders() {\n                const req = await fetch(\"http://localhost:3000/burgers\");\n                const data = await req.json();\n\n                this.burgers = Array.from(data);\n                this.getStatus();\n            },\n            async getStatus() {\n                const req = await fetch(\"http://localhost:3000/status\");\n                const data = await req.json();\n                this.status = Array.from(data)\n            },\n            async deleteOrder(id) {\n                const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                    method: \"DELETE\"\n                })\n\n                const res = await req.json();\n\n                this.msg = `O pedido ${id} foi deletado com sucesso`\n\n                setTimeout(() => this.msg = \"\", 10000);\n\n                this.getOrders();\n            },\n            async updateOrder(event, id) {\n\n                const option = event.target.value;\n\n                const dataJson = JSON.stringify({\n                    status: option\n                });\n\n                const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                    method: \"PATCH\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: dataJson\n                });\n\n                const res = await req.json()\n            }\n        },\n        mounted() {\n            this.getOrders();\n        },\n        components: {\n            MessageVue\n        },\n    };\n</script>\n<style scoped>\n    @import \"style.scss\";\n</style>\n"],"mappings":";;;EACSA,EAAE,EAAC;AAAW;gEAKXC,mBAAA,CAOM;EAPDC,KAAK,EAAC;AAAuB,I,aAC9BD,mBAAA,CAA6B;EAAxBC,KAAK,EAAC;AAAU,GAAC,GAAC,G,aACvBD,mBAAA,CAAmB,aAAd,UAAQ,G,aACbA,mBAAA,CAAe,aAAV,MAAI,G,aACTA,mBAAA,CAAiB,aAAZ,QAAM,G,aACXA,mBAAA,CAAqB,aAAhB,YAAU,G,aACfA,mBAAA,CAAiB,aAAZ,QAAM,E;;EAEVC,KAAK,EAAC;AAAoB;;EAElBA,KAAK,EAAC;AAAc;;gEAWjBD,mBAAA,CAAgC;EAAxBE,KAAK,EAAC;AAAE,GAAC,QAAM;;;;;uBA1B/CC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCFJ,mBAAA,CAiCM,cAhCFA,mBAAA,CAEM,c,gBADFK,YAAA,CAAsCC,qBAAA;IAAzBC,GAAG,EAAEC,KAAA,CAAAD;EAAG,mC,SAAUC,KAAA,CAAAD,GAAG,E,KAEtCE,UAOM,EACNT,mBAAA,CAoBM,OApBNU,UAoBM,I,kBAnBFP,mBAAA,CAkBMQ,SAAA,QAAAC,WAAA,CAlBiBJ,KAAA,CAAAK,OAAO,EAAlBC,OAAO;yBAAnBX,mBAAA,CAkBM;MAlB2BY,GAAG,EAAED,OAAO,CAACf,EAAE;MAAEE,KAAK,EAAC;QACpDD,mBAAA,CAAkD,OAAlDgB,UAAkD,EAAAC,gBAAA,CAArBH,OAAO,CAAGf,EAAE,kBACzCC,mBAAA,CAA+B,aAAAiB,gBAAA,CAAvBH,OAAO,CAAGI,IAAI,kBACtBlB,mBAAA,CAAgC,aAAAiB,gBAAA,CAAxBH,OAAO,CAAGK,KAAK,kBACvBnB,mBAAA,CAA+B,aAAAiB,gBAAA,CAAvBH,OAAO,CAAGM,IAAI,kBACtBpB,mBAAA,CAIM,cAHFA,mBAAA,CAEK,c,kBADDG,mBAAA,CAA6EQ,SAAA,QAAAC,WAAA,CAAtDE,OAAO,CAACO,SAAS,EAA7BC,QAAQ;2BAAnBnB,mBAAA,CAA6E;QAAlCY,GAAG,EAAEO;MAAQ,GAAAL,gBAAA,CAAKK,QAAQ;wCAG7EtB,mBAAA,CAOM,cANFA,mBAAA,CAIS;MAJDkB,IAAI,EAAC,QAAQ;MAACjB,KAAK,EAAC,QAAQ;MAAEsB,QAAM,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACF,MAAM,EAAEV,OAAO,CAACf,EAAE;QACxE4B,UAAgC,G,kBAChCxB,mBAAA,CACkFQ,SAAA,QAAAC,WAAA,CADrDJ,KAAA,CAAAoB,MAAM,EAApBC,UAAU;2BAAzB1B,mBAAA,CACkF;QAD5CY,GAAG,EAAEc,UAAU,CAAC9B,EAAE;QAAGG,KAAK,EAAE2B,UAAU,CAACX,IAAI;QAC5EY,QAAQ,EAAEhB,OAAO,CAACc,MAAM,IAAIC,UAAU,CAACX;0BAASW,UAAU,CAAGX,IAAI,wBAAAa,UAAA;kFAE1E/B,mBAAA,CAA6E;MAArEC,KAAK,EAAC,YAAY;MAAE+B,OAAK,EAAAR,MAAA,IAAEC,QAAA,CAAAQ,WAAW,CAACnB,OAAO,CAACf,EAAE;OAAG,UAAQ,iBAAAmC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}